__author__ = ['Andrew Deloucas <ADeloucas@g.harvard.com>']
__license__ = 'MIT License. See LICENSE.'

import unittest
from pyatf.ATFConverter import ATFConverter

class test1(unittest.TestCase):  # pylint: disable=R0904

    def test1(self):
        ATF = ATFConverter()
        text = [(r's,'), (r'S,'), (r't,'), (r'T,'), (r'sz'), (r'SZ'), (r's,a'), (r'as,-bat')]
        target = str(['·π£', '·π¢', '·π≠', '·π¨', '≈°', '≈†', '·π£a', 'a·π£-bat'])

        output = ATF.convert(text)

        self.assertEqual(output, target)

class test2(unittest.TestCase):  # pylint: disable=R0904

    def test2(self):
        ATF = ATFConverter()
        text = ['szi3', 'lil2', 'bi2', 't,e4', 'u3', 'aga2', 'ARAD2', 'geme2', 'sig17', 'u3 _ku3-sig17', 'ra-pi2-qi2']
        target = str(['≈°√¨', 'l√≠l', 'b√≠', '·π≠e‚ÇÑ', '√π', '√°ga', '√°RAD', 'g√©me', 'sig‚ÇÅ‚Çá', '√π _k√π-sig‚ÇÅ‚Çá', 'ra-p√≠-q√≠'])

        output = ATF.convert(text)

        self.assertEqual(output, target)

class test3(unittest.TestCase):  # pylint: disable=R0904

    def test3(self):
        ATF = ATFConverter()
        text = ['{d}', '{iri}', '{l√∫}', '{lu2}', '{di≈°}', '{disz}', '{ge≈°}', '{gesz}', '{munus}', '{≈°e}', 
                '{sze}', '{uzu}', '{ku≈°}', '{kusz}', '{ki}', r'(u)', r'(di≈°)', r'(disz)', r'{i7}', r'{I7}']
        target = str(['·µà', '‚Å± ≥‚Å±', 'À°·∂∏¬≤', 'À°·∂∏¬≤', 'íÅπ', 'íÅπ', '·µç·µâÀ¢·∂ª', '·µç·µâÀ¢·∂ª', '·µê·∂∏‚Åø·∂∏À¢', 'À¢·∂ª·µâ',
                      'À¢·∂ª·µâ', '·∂∏·∂ª·∂∏', '·µè·∂∏À¢·∂ª', '·µè·∂∏À¢·∂ª', '·µè‚Å±', '(íåã)', '(íÅπ)', '(íÅπ)','‚Å±‚Å∑', '‚Å±‚Å∑'])

        output = ATF.convert(text)

        self.assertEqual(output, target)

class test4(unittest.TestCase):  # pylint: disable=R0904

    def test4(self):
        ATF = ATFConverter()
        text = [r'_a-sza3 u8 udu hi-a_', r'_sze siki i3-gesz zu2-lum_', r'_ i-yu-ti-in _', r'_ sza szu-ba-at-_', 
                r'_ szu-a-ti i-na _', r'_a-sza3 sze-gesz-i3_', r'_sipa u8 udu hi-a_', r'_a-sza3_ be-el _', r'_iti_ x x x _'
                r'_ it-ti _',r'_ma-na ku3-babbar_', r'_ga#-usz2_', r'_l√∫#_',
                r'_{ge≈°#}m√°#-hi-a gal_', r'_l√∫#-me≈°_']
        target = str([r'_A-≈†√Ä U‚Çà UDU HI-A_', r'_≈†E SIKI √å-GE≈† Z√ö-LUM_', r'_ i-yu-ti-in _', r'_ ≈°a ≈°u-ba-at-_', 
                      r'_ ≈°u-a-ti i-na _', r'_A-≈†√Ä ≈†E-GE≈†-√å_', r'_SIPA U‚Çà UDU HI-A_', r'_A-≈†√Ä_ be-el _', r'_ITI_ x x x _'
                      r'_ it-ti _', r'_MA-NA K√ô-BABBAR_', r'_GA#-√ö≈†_', r'_L√ö#_',
                    r'_·µç·µâÀ¢·∂ª#M√Å#-HI-A GAL_', r'_L√ö#-ME≈†_'])

        output = ATF.convert(text)
        self.maxDiff = None
        self.assertEqual(output, target)

if __name__ == '__main__':
    unittest.main()
