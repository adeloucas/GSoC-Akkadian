
__author__ = ['Andrew Deloucas <ADeloucas@g.harvard.com>']
__license__ = 'MIT License. See LICENSE.'

import unittest
from tests.logic import ATFConverter

class shtsconvert(unittest.TestCase):  # pylint: disable=R0904

    def test1(self):
        ATF = ATFConverter()
        text = [(r's,'), (r'S,'), (r't,'), (r'T,'), (r'sz'), (r'SZ'), (r's,a'), (r'as,-bat')]
        target = str(['·π£', '·π¢', '·π≠', '·π¨', '≈°', '≈†', '·π£a', 'a·π£-bat'])

        output = ATF.convert(text)

        self.assertEqual(output, target)

class signsconvert(unittest.TestCase):  # pylint: disable=R0904

    def test2(self):
        ATF = ATFConverter()
        text = ['szi3', 'lil2', 'bi2', 't,e4', 'u3', 'aga2', 'ARAD2', 'geme2', 'sig17', 'u3 _ku3-sig17', 'ra-pi2-qi2']
        target = str(['≈°√¨', 'l√≠l', 'b√≠', '·π≠e‚ÇÑ', '√π', '√°ga', '√°RAD', 'g√©me', 'sig‚ÇÅ‚Çá', '√π _k√π-sig‚ÇÅ‚Çá', 'ra-p√≠-q√≠'])

        output = ATF.convert(text)

        self.assertEqual(output, target)

class determinatives(unittest.TestCase):  # pylint: disable=R0904

    def test3(self):
        ATF = ATFConverter()
        text = ['{d}', '{iri}', '{l√∫}', '{lu2}', '{di≈°}', '{disz}', '{ge≈°}', '{gesz}', '{munus}', '{≈°e}', 
                '{sze}', '{uzu}', '{ku≈°}', '{kusz}', '{ki}', r'(u)', r'(di≈°)', r'(disz)', r'{i7}', r'{I7}']
        target = str(['·µà', '‚Å± ≥‚Å±', 'À°·∂∏¬≤', 'À°·∂∏¬≤', 'íÅπ', 'íÅπ', '·µç·µâÀ¢·∂ª', '·µç·µâÀ¢·∂ª', '·µê·∂∏‚Åø·∂∏À¢', 'À¢·∂ª·µâ',
                      'À¢·∂ª·µâ', '·∂∏·∂ª·∂∏', '·µè·∂∏À¢·∂ª', '·µè·∂∏À¢·∂ª', '·µè‚Å±', '(íåã)', '(íÅπ)', '(íÅπ)','‚Å±‚Å∑', '‚Å±‚Å∑'])

        output = ATF.convert(text)

        self.assertEqual(output, target)

if __name__ == '__main__':
    unittest.main()
